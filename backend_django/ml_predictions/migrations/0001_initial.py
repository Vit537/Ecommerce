# Generated by Django 5.2.5 on 2025-10-20 01:52

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='MLModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('model_type', models.CharField(choices=[('sales_forecast', 'Predicción de Ventas'), ('product_recommendation', 'Recomendación de Productos'), ('customer_segmentation', 'Segmentación de Clientes'), ('inventory_optimization', 'Optimización de Inventario'), ('price_optimization', 'Optimización de Precios')], max_length=50)),
                ('version', models.CharField(max_length=50)),
                ('file_path', models.CharField(max_length=500)),
                ('accuracy_score', models.FloatField(blank=True, null=True)),
                ('metrics', models.JSONField(blank=True, default=dict)),
                ('parameters', models.JSONField(blank=True, default=dict)),
                ('training_data_size', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('trained_at', models.DateTimeField(auto_now_add=True)),
                ('last_used_at', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('trained_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'ML Model',
                'verbose_name_plural': 'ML Models',
                'ordering': ['-trained_at'],
            },
        ),
        migrations.CreateModel(
            name='MLTrainingLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('model_type', models.CharField(max_length=50)),
                ('status', models.CharField(choices=[('pending', 'Pendiente'), ('training', 'Entrenando'), ('completed', 'Completado'), ('failed', 'Fallido')], default='pending', max_length=20)),
                ('data_from', models.DateField(blank=True, null=True)),
                ('data_to', models.DateField(blank=True, null=True)),
                ('records_processed', models.IntegerField(default=0)),
                ('training_duration_seconds', models.IntegerField(default=0)),
                ('metrics', models.JSONField(blank=True, default=dict)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('model_saved', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='training_logs', to='ml_predictions.mlmodel')),
                ('started_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'ML Training Log',
                'verbose_name_plural': 'ML Training Logs',
                'ordering': ['-started_at'],
            },
        ),
        migrations.CreateModel(
            name='Prediction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('input_data', models.JSONField()),
                ('prediction_result', models.JSONField()),
                ('confidence_score', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('execution_time_ms', models.IntegerField(default=0)),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='predictions', to='ml_predictions.mlmodel')),
                ('requested_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Prediction',
                'verbose_name_plural': 'Predictions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='InventoryAlert',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('product_id', models.UUIDField()),
                ('alert_type', models.CharField(choices=[('low_stock', 'Stock Bajo'), ('overstock', 'Sobrestock'), ('reorder_now', 'Reabastecer Ahora'), ('slow_moving', 'Producto de Baja Rotación'), ('high_demand', 'Alta Demanda Próxima')], max_length=20)),
                ('current_stock', models.IntegerField()),
                ('recommended_stock', models.IntegerField()),
                ('predicted_demand_7days', models.IntegerField(blank=True, null=True)),
                ('predicted_demand_30days', models.IntegerField(blank=True, null=True)),
                ('urgency_level', models.IntegerField(default=1)),
                ('estimated_stockout_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('resolved', models.BooleanField(default=False)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('prediction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventory_alerts', to='ml_predictions.prediction')),
            ],
            options={
                'verbose_name': 'Inventory Alert',
                'verbose_name_plural': 'Inventory Alerts',
                'ordering': ['-urgency_level', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CustomerSegment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('customer_id', models.UUIDField()),
                ('segment_type', models.CharField(choices=[('vip', 'Cliente VIP'), ('frequent', 'Cliente Frecuente'), ('occasional', 'Cliente Ocasional'), ('at_risk', 'En Riesgo de Abandono'), ('new', 'Cliente Nuevo'), ('inactive', 'Cliente Inactivo')], max_length=20)),
                ('confidence_score', models.FloatField()),
                ('characteristics', models.JSONField(default=dict)),
                ('recommendations', models.JSONField(default=list)),
                ('lifetime_value_prediction', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('prediction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='customer_segments', to='ml_predictions.prediction')),
            ],
            options={
                'verbose_name': 'Customer Segment',
                'verbose_name_plural': 'Customer Segments',
                'ordering': ['-confidence_score'],
            },
        ),
        migrations.CreateModel(
            name='ProductRecommendation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('source_product_id', models.UUIDField()),
                ('recommended_product_id', models.UUIDField()),
                ('confidence_score', models.FloatField()),
                ('reason', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('prediction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_recommendations', to='ml_predictions.prediction')),
            ],
            options={
                'verbose_name': 'Product Recommendation',
                'verbose_name_plural': 'Product Recommendations',
                'ordering': ['-confidence_score'],
            },
        ),
        migrations.CreateModel(
            name='SalesForecast',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('forecast_date', models.DateField()),
                ('predicted_sales', models.DecimalField(decimal_places=2, max_digits=12)),
                ('predicted_quantity', models.IntegerField()),
                ('confidence_interval_lower', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('confidence_interval_upper', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('category', models.CharField(blank=True, max_length=100, null=True)),
                ('product_id', models.UUIDField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('prediction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sales_forecasts', to='ml_predictions.prediction')),
            ],
            options={
                'verbose_name': 'Sales Forecast',
                'verbose_name_plural': 'Sales Forecasts',
                'ordering': ['forecast_date'],
            },
        ),
    ]
